/**
 * Train the Header Classifier Model
 *
 * This script uses the training data generated by trainingDataGenerator.js
 * to train the HeaderClassifier model.
 */

const fs = require("fs");
const path = require("path");
const { SimpleHeaderClassifier } = require("./simpleHeaderClassifier");
const { generateTrainingData } = require("./trainingDataGenerator");
const { trainTestSplit } = require("./evaluateModelMetrics");

const TRAINING_DIR = path.join(__dirname, "../ml");
const MODEL_DIR = path.join(__dirname, "../ml");
const MODEL_PATH = path.join(MODEL_DIR, "header_classifier.json");

async function trainModel() {
  try {
    // Create model directory if it doesn't exist
    if (!fs.existsSync(MODEL_DIR)) {
      fs.mkdirSync(MODEL_DIR, { recursive: true });
    }

    // Generate training data if needed
    const trainingDataPath = path.join(
      TRAINING_DIR,
      "header_training_data.json"
    );
    if (!fs.existsSync(trainingDataPath)) {
      // console.log("Generating training data...");
      await generateTrainingData();
    }

    // Load training data
    const allTrainingData = JSON.parse(fs.readFileSync(trainingDataPath));

    // Split data for evaluation
    const { trainData, testData } = trainTestSplit(allTrainingData, 0.2);

    // Initialize and train the classifier
    const classifier = new SimpleHeaderClassifier();
    classifier.train(trainData);

    
  } catch (error) {
    console.error("Error training model:", error);
  }
}

if (require.main === module) {
  trainModel().catch(console.error);
}

module.exports = { trainModel };
