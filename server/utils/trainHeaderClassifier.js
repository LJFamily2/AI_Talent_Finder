/**
 * Train the Header Classifier Model
 *
 * This script uses the training data generated by trainingDataGenerator.js
 * to train the HeaderClassifier model.
 */

const fs = require("fs");
const path = require("path");
const { SimpleHeaderClassifier } = require("./simpleHeaderClassifier");
const { generateTrainingData } = require("./trainingDataGenerator");

const TRAINING_DIR = path.join(__dirname, "../data/training");
const MODEL_DIR = path.join(__dirname, "../models");
const MODEL_PATH = path.join(MODEL_DIR, "header_classifier.json");

async function trainModel() {
  try {
    // Create model directory if it doesn't exist
    if (!fs.existsSync(MODEL_DIR)) {
      fs.mkdirSync(MODEL_DIR, { recursive: true });
    }

    // Generate training data if needed
    const trainingDataPath = path.join(
      TRAINING_DIR,
      "header_training_data.json"
    );
    if (!fs.existsSync(trainingDataPath)) {
      console.log("Generating training data...");
      await generateTrainingData();
    }

    // Load training data
    console.log("Loading training data...");
    const allTrainingData = JSON.parse(fs.readFileSync(trainingDataPath));

    // Use a subset for faster training (first 500 examples)
    const trainingData = allTrainingData.slice(0, 500);
    console.log(
      `Using ${trainingData.length} examples out of ${allTrainingData.length} total`
    );

    // Initialize and train the classifier
    console.log("Training classifier...");
    const classifier = new SimpleHeaderClassifier();
    classifier.train(trainingData);

    // Save the trained model
    console.log("Saving model...");
    classifier.save(MODEL_PATH);

    console.log(`Model trained and saved to ${MODEL_PATH}`);
    console.log(`Processed ${trainingData.length} examples`);

    // Test the model on a few examples
    console.log("\nTesting model on some examples:");
    const testExamples = [
      { text: "EDUCATION", index: 10, total: 100 },
      { text: "WORK EXPERIENCE", index: 30, total: 100 },
      { text: "Some random text in a paragraph.", index: 50, total: 100 },
      { text: "PUBLICATIONS", index: 70, total: 100 },
      { text: "324782830.54", index: 704, total: 100 },
      { text: "Kietye", index: 750, total: 100 },
      { text: "Kietye123", index: 7043, total: 100 },
      { text: "Atricles", index: 7543, total: 100 },
      { text: "Articles", index: 443, total: 100 },
    ];

    testExamples.forEach((example) => {
      const isHeader = classifier.predict(
        example.text,
        example.index,
        example.total
      );
      console.log(`"${example.text}": ${isHeader ? "Header" : "Not Header"}`);
    });
  } catch (error) {
    console.error("Error training model:", error);
  }
}

if (require.main === module) {
  trainModel().catch(console.error);
}

module.exports = { trainModel };
